// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: core/node_accessor_protocol.proto

package core

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Carrier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Packet []*Packet `protobuf:"bytes,1,rep,name=packet,proto3" json:"packet,omitempty"`
}

func (x *Carrier) Reset() {
	*x = Carrier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_node_accessor_protocol_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Carrier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Carrier) ProtoMessage() {}

func (x *Carrier) ProtoReflect() protoreflect.Message {
	mi := &file_core_node_accessor_protocol_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Carrier.ProtoReflect.Descriptor instead.
func (*Carrier) Descriptor() ([]byte, []int) {
	return file_core_node_accessor_protocol_proto_rawDescGZIP(), []int{0}
}

func (x *Carrier) GetPacket() []*Packet {
	if x != nil {
		return x.Packet
	}
	return nil
}

type Head struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DstNid        *NodeID `protobuf:"bytes,1,opt,name=dst_nid,json=dstNid,proto3" json:"dst_nid,omitempty"`
	SrcNid        *NodeID `protobuf:"bytes,2,opt,name=src_nid,json=srcNid,proto3" json:"src_nid,omitempty"`
	HopCount      uint32  `protobuf:"varint,3,opt,name=hop_count,json=hopCount,proto3" json:"hop_count,omitempty"`
	Mode          uint32  `protobuf:"varint,4,opt,name=mode,proto3" json:"mode,omitempty"`
	Channel       uint32  `protobuf:"varint,5,opt,name=channel,proto3" json:"channel,omitempty"`
	ModuleChannel uint32  `protobuf:"varint,6,opt,name=module_channel,json=moduleChannel,proto3" json:"module_channel,omitempty"`
	CommandId     uint32  `protobuf:"varint,7,opt,name=command_id,json=commandId,proto3" json:"command_id,omitempty"`
}

func (x *Head) Reset() {
	*x = Head{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_node_accessor_protocol_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Head) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Head) ProtoMessage() {}

func (x *Head) ProtoReflect() protoreflect.Message {
	mi := &file_core_node_accessor_protocol_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Head.ProtoReflect.Descriptor instead.
func (*Head) Descriptor() ([]byte, []int) {
	return file_core_node_accessor_protocol_proto_rawDescGZIP(), []int{1}
}

func (x *Head) GetDstNid() *NodeID {
	if x != nil {
		return x.DstNid
	}
	return nil
}

func (x *Head) GetSrcNid() *NodeID {
	if x != nil {
		return x.SrcNid
	}
	return nil
}

func (x *Head) GetHopCount() uint32 {
	if x != nil {
		return x.HopCount
	}
	return 0
}

func (x *Head) GetMode() uint32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *Head) GetChannel() uint32 {
	if x != nil {
		return x.Channel
	}
	return 0
}

func (x *Head) GetModuleChannel() uint32 {
	if x != nil {
		return x.ModuleChannel
	}
	return 0
}

func (x *Head) GetCommandId() uint32 {
	if x != nil {
		return x.CommandId
	}
	return 0
}

type Packet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Enable head if index is 0.
	Head *Head `protobuf:"bytes,1,opt,name=head,proto3" json:"head,omitempty"`
	// ID is common to sequence of packets.
	Id uint32 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// index decreses by 1 in a sequance of packets.
	Index   uint32 `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
	Content []byte `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *Packet) Reset() {
	*x = Packet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_node_accessor_protocol_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Packet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Packet) ProtoMessage() {}

func (x *Packet) ProtoReflect() protoreflect.Message {
	mi := &file_core_node_accessor_protocol_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Packet.ProtoReflect.Descriptor instead.
func (*Packet) Descriptor() ([]byte, []int) {
	return file_core_node_accessor_protocol_proto_rawDescGZIP(), []int{2}
}

func (x *Packet) GetHead() *Head {
	if x != nil {
		return x.Head
	}
	return nil
}

func (x *Packet) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Packet) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Packet) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type ICE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocalNid  *NodeID `protobuf:"bytes,1,opt,name=local_nid,json=localNid,proto3" json:"local_nid,omitempty"`
	RemoteNid *NodeID `protobuf:"bytes,2,opt,name=remote_nid,json=remoteNid,proto3" json:"remote_nid,omitempty"`
	Ice       string  `protobuf:"bytes,3,opt,name=ice,proto3" json:"ice,omitempty"`
}

func (x *ICE) Reset() {
	*x = ICE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_node_accessor_protocol_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ICE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ICE) ProtoMessage() {}

func (x *ICE) ProtoReflect() protoreflect.Message {
	mi := &file_core_node_accessor_protocol_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ICE.ProtoReflect.Descriptor instead.
func (*ICE) Descriptor() ([]byte, []int) {
	return file_core_node_accessor_protocol_proto_rawDescGZIP(), []int{3}
}

func (x *ICE) GetLocalNid() *NodeID {
	if x != nil {
		return x.LocalNid
	}
	return nil
}

func (x *ICE) GetRemoteNid() *NodeID {
	if x != nil {
		return x.RemoteNid
	}
	return nil
}

func (x *ICE) GetIce() string {
	if x != nil {
		return x.Ice
	}
	return ""
}

type Offer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrimeNid  *NodeID `protobuf:"bytes,1,opt,name=prime_nid,json=primeNid,proto3" json:"prime_nid,omitempty"`
	SecondNid *NodeID `protobuf:"bytes,2,opt,name=second_nid,json=secondNid,proto3" json:"second_nid,omitempty"`
	Sdp       string  `protobuf:"bytes,3,opt,name=sdp,proto3" json:"sdp,omitempty"`
	Type      uint32  `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *Offer) Reset() {
	*x = Offer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_node_accessor_protocol_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Offer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Offer) ProtoMessage() {}

func (x *Offer) ProtoReflect() protoreflect.Message {
	mi := &file_core_node_accessor_protocol_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Offer.ProtoReflect.Descriptor instead.
func (*Offer) Descriptor() ([]byte, []int) {
	return file_core_node_accessor_protocol_proto_rawDescGZIP(), []int{4}
}

func (x *Offer) GetPrimeNid() *NodeID {
	if x != nil {
		return x.PrimeNid
	}
	return nil
}

func (x *Offer) GetSecondNid() *NodeID {
	if x != nil {
		return x.SecondNid
	}
	return nil
}

func (x *Offer) GetSdp() string {
	if x != nil {
		return x.Sdp
	}
	return ""
}

func (x *Offer) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type OfferSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status    uint32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	SecondNid *NodeID `protobuf:"bytes,2,opt,name=second_nid,json=secondNid,proto3" json:"second_nid,omitempty"`
	Sdp       string  `protobuf:"bytes,3,opt,name=sdp,proto3" json:"sdp,omitempty"`
}

func (x *OfferSuccess) Reset() {
	*x = OfferSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_node_accessor_protocol_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfferSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfferSuccess) ProtoMessage() {}

func (x *OfferSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_core_node_accessor_protocol_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfferSuccess.ProtoReflect.Descriptor instead.
func (*OfferSuccess) Descriptor() ([]byte, []int) {
	return file_core_node_accessor_protocol_proto_rawDescGZIP(), []int{5}
}

func (x *OfferSuccess) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *OfferSuccess) GetSecondNid() *NodeID {
	if x != nil {
		return x.SecondNid
	}
	return nil
}

func (x *OfferSuccess) GetSdp() string {
	if x != nil {
		return x.Sdp
	}
	return ""
}

type OfferFailure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   uint32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	PrimeNid *NodeID `protobuf:"bytes,2,opt,name=prime_nid,json=primeNid,proto3" json:"prime_nid,omitempty"`
}

func (x *OfferFailure) Reset() {
	*x = OfferFailure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_node_accessor_protocol_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfferFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfferFailure) ProtoMessage() {}

func (x *OfferFailure) ProtoReflect() protoreflect.Message {
	mi := &file_core_node_accessor_protocol_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfferFailure.ProtoReflect.Descriptor instead.
func (*OfferFailure) Descriptor() ([]byte, []int) {
	return file_core_node_accessor_protocol_proto_rawDescGZIP(), []int{6}
}

func (x *OfferFailure) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *OfferFailure) GetPrimeNid() *NodeID {
	if x != nil {
		return x.PrimeNid
	}
	return nil
}

var File_core_node_accessor_protocol_proto protoreflect.FileDescriptor

var file_core_node_accessor_protocol_proto_rawDesc = []byte{
	0x0a, 0x21, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x6f, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x63, 0x6f, 0x6c, 0x6f, 0x6e, 0x69, 0x6f, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x1a, 0x0f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x47, 0x0a, 0x07, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x12, 0x3c, 0x0a,
	0x06, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x63, 0x6f, 0x6c, 0x6f, 0x6e, 0x69, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x52, 0x06, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x22, 0xf5, 0x01, 0x0a, 0x04,
	0x48, 0x65, 0x61, 0x64, 0x12, 0x2d, 0x0a, 0x07, 0x64, 0x73, 0x74, 0x5f, 0x6e, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6c, 0x6f, 0x6e, 0x69, 0x6f, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x52, 0x06, 0x64, 0x73, 0x74,
	0x4e, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x07, 0x73, 0x72, 0x63, 0x5f, 0x6e, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6c, 0x6f, 0x6e, 0x69, 0x6f, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x52, 0x06, 0x73, 0x72, 0x63, 0x4e,
	0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x70, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x68, 0x6f, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6d,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x25, 0x0a,
	0x0e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f,
	0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x49, 0x64, 0x22, 0x80, 0x01, 0x0a, 0x06, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x36,
	0x0a, 0x04, 0x68, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63,
	0x6f, 0x6c, 0x6f, 0x6e, 0x69, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x48, 0x65, 0x61, 0x64,
	0x52, 0x04, 0x68, 0x65, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x7f, 0x0a, 0x03, 0x49, 0x43, 0x45, 0x12, 0x31, 0x0a,
	0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x6e, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6c, 0x6f, 0x6e, 0x69, 0x6f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x4e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x4e, 0x69, 0x64,
	0x12, 0x33, 0x0a, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x6e, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6c, 0x6f, 0x6e, 0x69, 0x6f, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x52, 0x09, 0x72, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x4e, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x69, 0x63, 0x65, 0x22, 0x95, 0x01, 0x0a, 0x05, 0x4f, 0x66, 0x66, 0x65,
	0x72, 0x12, 0x31, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x5f, 0x6e, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6c, 0x6f, 0x6e, 0x69, 0x6f, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6d,
	0x65, 0x4e, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x5f, 0x6e,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6c, 0x6f, 0x6e,
	0x69, 0x6f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x52, 0x09,
	0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x4e, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x64, 0x70,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x64, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22,
	0x6d, 0x0a, 0x0c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x33, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x5f, 0x6e, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f,
	0x6c, 0x6f, 0x6e, 0x69, 0x6f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49,
	0x44, 0x52, 0x09, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x4e, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x64, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x64, 0x70, 0x22, 0x59,
	0x0a, 0x0c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x5f,
	0x6e, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6c, 0x6f,
	0x6e, 0x69, 0x6f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x52,
	0x08, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x4e, 0x69, 0x64, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x6c, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x64,
	0x61, 0x2d, 0x6a, 0x70, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x6e, 0x69, 0x6f, 0x2d, 0x73, 0x65, 0x65,
	0x64, 0x2f, 0x73, 0x65, 0x65, 0x64, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_core_node_accessor_protocol_proto_rawDescOnce sync.Once
	file_core_node_accessor_protocol_proto_rawDescData = file_core_node_accessor_protocol_proto_rawDesc
)

func file_core_node_accessor_protocol_proto_rawDescGZIP() []byte {
	file_core_node_accessor_protocol_proto_rawDescOnce.Do(func() {
		file_core_node_accessor_protocol_proto_rawDescData = protoimpl.X.CompressGZIP(file_core_node_accessor_protocol_proto_rawDescData)
	})
	return file_core_node_accessor_protocol_proto_rawDescData
}

var file_core_node_accessor_protocol_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_core_node_accessor_protocol_proto_goTypes = []interface{}{
	(*Carrier)(nil),      // 0: colonio.NodeAccessorProtocol.Carrier
	(*Head)(nil),         // 1: colonio.NodeAccessorProtocol.Head
	(*Packet)(nil),       // 2: colonio.NodeAccessorProtocol.Packet
	(*ICE)(nil),          // 3: colonio.NodeAccessorProtocol.ICE
	(*Offer)(nil),        // 4: colonio.NodeAccessorProtocol.Offer
	(*OfferSuccess)(nil), // 5: colonio.NodeAccessorProtocol.OfferSuccess
	(*OfferFailure)(nil), // 6: colonio.NodeAccessorProtocol.OfferFailure
	(*NodeID)(nil),       // 7: colonio.core.NodeID
}
var file_core_node_accessor_protocol_proto_depIdxs = []int32{
	2,  // 0: colonio.NodeAccessorProtocol.Carrier.packet:type_name -> colonio.NodeAccessorProtocol.Packet
	7,  // 1: colonio.NodeAccessorProtocol.Head.dst_nid:type_name -> colonio.core.NodeID
	7,  // 2: colonio.NodeAccessorProtocol.Head.src_nid:type_name -> colonio.core.NodeID
	1,  // 3: colonio.NodeAccessorProtocol.Packet.head:type_name -> colonio.NodeAccessorProtocol.Head
	7,  // 4: colonio.NodeAccessorProtocol.ICE.local_nid:type_name -> colonio.core.NodeID
	7,  // 5: colonio.NodeAccessorProtocol.ICE.remote_nid:type_name -> colonio.core.NodeID
	7,  // 6: colonio.NodeAccessorProtocol.Offer.prime_nid:type_name -> colonio.core.NodeID
	7,  // 7: colonio.NodeAccessorProtocol.Offer.second_nid:type_name -> colonio.core.NodeID
	7,  // 8: colonio.NodeAccessorProtocol.OfferSuccess.second_nid:type_name -> colonio.core.NodeID
	7,  // 9: colonio.NodeAccessorProtocol.OfferFailure.prime_nid:type_name -> colonio.core.NodeID
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_core_node_accessor_protocol_proto_init() }
func file_core_node_accessor_protocol_proto_init() {
	if File_core_node_accessor_protocol_proto != nil {
		return
	}
	file_core_core_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_core_node_accessor_protocol_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Carrier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_node_accessor_protocol_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Head); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_node_accessor_protocol_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Packet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_node_accessor_protocol_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ICE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_node_accessor_protocol_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Offer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_node_accessor_protocol_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfferSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_node_accessor_protocol_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfferFailure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_core_node_accessor_protocol_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_core_node_accessor_protocol_proto_goTypes,
		DependencyIndexes: file_core_node_accessor_protocol_proto_depIdxs,
		MessageInfos:      file_core_node_accessor_protocol_proto_msgTypes,
	}.Build()
	File_core_node_accessor_protocol_proto = out.File
	file_core_node_accessor_protocol_proto_rawDesc = nil
	file_core_node_accessor_protocol_proto_goTypes = nil
	file_core_node_accessor_protocol_proto_depIdxs = nil
}
