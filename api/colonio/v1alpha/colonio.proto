syntax = "proto3";

package api.colonio.v1alpha;

option go_package = "github.com/llamerada-jp/colonio/api/colonio/v1alpha";

// basic types
message Coordinate {
  double x = 1;
  double y = 2;
}

message NodeID {
  uint64 id0 = 1;
  uint64 id1 = 2;
}

// node-node packet container
// Or use an empty message as a ping to cancel the timeout.
message NodePackets { repeated NodePacket packets = 1; }

message NodePacketHead {
  NodeID dst_node_id = 1;
  NodeID src_node_id = 2;
  uint32 hop_count = 3;
  uint32 mode = 4;
}

message NodePacket {
  // Enable head if index is 0.
  NodePacketHead head = 1;
  // ID is common to sequence of packets.
  uint32 id = 2;
  // index decreases by 1 in a sequence of packets.
  uint32 index = 3;
  bytes content = 4;
}

//
message PacketContent {
  oneof content {
    Error error = 1;

    Routing routing = 10;

    Messaging messaging = 20;
    MessagingResponse messaging_response = 21;

    Spread spread = 50;
    SpreadKnock spread_knock = 51;
    SpreadKnockResponse spread_knock_response = 52;
    SpreadRelay spread_relay = 53;
    SpreadRelayResponse spread_relay_response = 54;
  }
}

message Error {
  uint32 code = 1;
  string message = 2;
}

// for routing
message RoutingNodeRecord {
  int64 r1d_score = 1;
  Coordinate r2d_position = 2;
}

message Routing {
  Coordinate r2d_position = 1;
  // Key type of map is string from node-id.
  map<string, RoutingNodeRecord> node_records = 2;
}

// for messaging module
message Messaging {
  string name = 1;
  bytes message = 2;
}

message MessagingResponse { 
  bytes response = 1;
}

// for spread module
message Spread {
  NodeID source = 1;
  Coordinate center = 2;
  double r = 3;
  uint64 uid = 4;
  string name = 5;
  bytes message = 6;
  uint32 opt = 7;
}

message SpreadKnock {
  Coordinate center = 1;
  double r = 2;
  uint64 uid = 3;
}

message SpreadKnockResponse {
  bool accept = 1;
}

message SpreadRelay {
  NodeID source = 1;
  Coordinate center = 2;
  double r = 3;
  uint64 uid = 4;
  string name = 5;
  bytes message = 6;
  uint32 opt = 7;
}

message SpreadRelayResponse {
  bool success = 1;
}
