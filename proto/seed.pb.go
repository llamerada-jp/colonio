// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.28.3
// source: proto/seed.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SeedPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DstNodeId *NodeID        `protobuf:"bytes,1,opt,name=dst_node_id,json=dstNodeId,proto3" json:"dst_node_id,omitempty"`
	SrcNodeId *NodeID        `protobuf:"bytes,2,opt,name=src_node_id,json=srcNodeId,proto3" json:"src_node_id,omitempty"`
	HopCount  uint32         `protobuf:"varint,3,opt,name=hop_count,json=hopCount,proto3" json:"hop_count,omitempty"`
	Id        uint32         `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	Mode      uint32         `protobuf:"varint,5,opt,name=mode,proto3" json:"mode,omitempty"`
	Content   *PacketContent `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *SeedPacket) Reset() {
	*x = SeedPacket{}
	mi := &file_proto_seed_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SeedPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeedPacket) ProtoMessage() {}

func (x *SeedPacket) ProtoReflect() protoreflect.Message {
	mi := &file_proto_seed_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeedPacket.ProtoReflect.Descriptor instead.
func (*SeedPacket) Descriptor() ([]byte, []int) {
	return file_proto_seed_proto_rawDescGZIP(), []int{0}
}

func (x *SeedPacket) GetDstNodeId() *NodeID {
	if x != nil {
		return x.DstNodeId
	}
	return nil
}

func (x *SeedPacket) GetSrcNodeId() *NodeID {
	if x != nil {
		return x.SrcNodeId
	}
	return nil
}

func (x *SeedPacket) GetHopCount() uint32 {
	if x != nil {
		return x.HopCount
	}
	return 0
}

func (x *SeedPacket) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SeedPacket) GetMode() uint32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *SeedPacket) GetContent() *PacketContent {
	if x != nil {
		return x.Content
	}
	return nil
}

type AssignNodeIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AssignNodeIDRequest) Reset() {
	*x = AssignNodeIDRequest{}
	mi := &file_proto_seed_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignNodeIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignNodeIDRequest) ProtoMessage() {}

func (x *AssignNodeIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_seed_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignNodeIDRequest.ProtoReflect.Descriptor instead.
func (*AssignNodeIDRequest) Descriptor() ([]byte, []int) {
	return file_proto_seed_proto_rawDescGZIP(), []int{1}
}

type AssignNodeIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId  *NodeID `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	IsAlone bool    `protobuf:"varint,2,opt,name=is_alone,json=isAlone,proto3" json:"is_alone,omitempty"`
}

func (x *AssignNodeIDResponse) Reset() {
	*x = AssignNodeIDResponse{}
	mi := &file_proto_seed_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignNodeIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignNodeIDResponse) ProtoMessage() {}

func (x *AssignNodeIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_seed_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignNodeIDResponse.ProtoReflect.Descriptor instead.
func (*AssignNodeIDResponse) Descriptor() ([]byte, []int) {
	return file_proto_seed_proto_rawDescGZIP(), []int{2}
}

func (x *AssignNodeIDResponse) GetNodeId() *NodeID {
	if x != nil {
		return x.NodeId
	}
	return nil
}

func (x *AssignNodeIDResponse) GetIsAlone() bool {
	if x != nil {
		return x.IsAlone
	}
	return false
}

type RelayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Packets []*SeedPacket `protobuf:"bytes,1,rep,name=packets,proto3" json:"packets,omitempty"`
}

func (x *RelayRequest) Reset() {
	*x = RelayRequest{}
	mi := &file_proto_seed_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RelayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelayRequest) ProtoMessage() {}

func (x *RelayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_seed_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelayRequest.ProtoReflect.Descriptor instead.
func (*RelayRequest) Descriptor() ([]byte, []int) {
	return file_proto_seed_proto_rawDescGZIP(), []int{3}
}

func (x *RelayRequest) GetPackets() []*SeedPacket {
	if x != nil {
		return x.Packets
	}
	return nil
}

type RelayResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RelayResponse) Reset() {
	*x = RelayResponse{}
	mi := &file_proto_seed_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RelayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelayResponse) ProtoMessage() {}

func (x *RelayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_seed_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelayResponse.ProtoReflect.Descriptor instead.
func (*RelayResponse) Descriptor() ([]byte, []int) {
	return file_proto_seed_proto_rawDescGZIP(), []int{4}
}

type PollRelayingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PollRelayingRequest) Reset() {
	*x = PollRelayingRequest{}
	mi := &file_proto_seed_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PollRelayingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollRelayingRequest) ProtoMessage() {}

func (x *PollRelayingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_seed_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollRelayingRequest.ProtoReflect.Descriptor instead.
func (*PollRelayingRequest) Descriptor() ([]byte, []int) {
	return file_proto_seed_proto_rawDescGZIP(), []int{5}
}

type PollRelayingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Packets []*SeedPacket `protobuf:"bytes,1,rep,name=packets,proto3" json:"packets,omitempty"`
	IsAlone bool          `protobuf:"varint,2,opt,name=is_alone,json=isAlone,proto3" json:"is_alone,omitempty"`
}

func (x *PollRelayingResponse) Reset() {
	*x = PollRelayingResponse{}
	mi := &file_proto_seed_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PollRelayingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollRelayingResponse) ProtoMessage() {}

func (x *PollRelayingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_seed_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollRelayingResponse.ProtoReflect.Descriptor instead.
func (*PollRelayingResponse) Descriptor() ([]byte, []int) {
	return file_proto_seed_proto_rawDescGZIP(), []int{6}
}

func (x *PollRelayingResponse) GetPackets() []*SeedPacket {
	if x != nil {
		return x.Packets
	}
	return nil
}

func (x *PollRelayingResponse) GetIsAlone() bool {
	if x != nil {
		return x.IsAlone
	}
	return false
}

var File_proto_seed_proto protoreflect.FileDescriptor

var file_proto_seed_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x65, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0f, 0x63, 0x6f, 0x6c, 0x6f, 0x6e, 0x69, 0x6f, 0x2e, 0x73, 0x65, 0x65, 0x64,
	0x2e, 0x76, 0x31, 0x1a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x6e,
	0x69, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf6, 0x01, 0x0a, 0x0a, 0x53, 0x65, 0x65,
	0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x36, 0x0a, 0x0b, 0x64, 0x73, 0x74, 0x5f, 0x6e,
	0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63,
	0x6f, 0x6c, 0x6f, 0x6e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f,
	0x64, 0x65, 0x49, 0x44, 0x52, 0x09, 0x64, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12,
	0x36, 0x0a, 0x0b, 0x73, 0x72, 0x63, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6c, 0x6f, 0x6e, 0x69, 0x6f, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x52, 0x09, 0x73, 0x72,
	0x63, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x70, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x68, 0x6f, 0x70, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6c, 0x6f,
	0x6e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x22, 0x15, 0x0a, 0x13, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x62, 0x0a, 0x14, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2f, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6c, 0x6f, 0x6e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x61, 0x6c, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x6c, 0x6f, 0x6e, 0x65, 0x22, 0x45, 0x0a, 0x0c,
	0x52, 0x65, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x07,
	0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x63, 0x6f, 0x6c, 0x6f, 0x6e, 0x69, 0x6f, 0x2e, 0x73, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x07, 0x70, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x22, 0x0f, 0x0a, 0x0d, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x50, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x6c, 0x61,
	0x79, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x68, 0x0a, 0x14, 0x50,
	0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6c, 0x6f, 0x6e, 0x69, 0x6f, 0x2e, 0x73,
	0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73,
	0x5f, 0x61, 0x6c, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73,
	0x41, 0x6c, 0x6f, 0x6e, 0x65, 0x32, 0x90, 0x02, 0x0a, 0x04, 0x53, 0x65, 0x65, 0x64, 0x12, 0x5d,
	0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x12, 0x24,
	0x2e, 0x63, 0x6f, 0x6c, 0x6f, 0x6e, 0x69, 0x6f, 0x2e, 0x73, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x63, 0x6f, 0x6c, 0x6f, 0x6e, 0x69, 0x6f, 0x2e, 0x73,
	0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x4e, 0x6f, 0x64,
	0x65, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a,
	0x05, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x1d, 0x2e, 0x63, 0x6f, 0x6c, 0x6f, 0x6e, 0x69, 0x6f,
	0x2e, 0x73, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x63, 0x6f, 0x6c, 0x6f, 0x6e, 0x69, 0x6f, 0x2e,
	0x73, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x0c, 0x50, 0x6f, 0x6c, 0x6c, 0x52,
	0x65, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x12, 0x24, 0x2e, 0x63, 0x6f, 0x6c, 0x6f, 0x6e, 0x69,
	0x6f, 0x2e, 0x73, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x52, 0x65,
	0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e,
	0x63, 0x6f, 0x6c, 0x6f, 0x6e, 0x69, 0x6f, 0x2e, 0x73, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x42, 0x27, 0x5a, 0x25, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x6c, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x64, 0x61,
	0x2d, 0x6a, 0x70, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x6e, 0x69, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_seed_proto_rawDescOnce sync.Once
	file_proto_seed_proto_rawDescData = file_proto_seed_proto_rawDesc
)

func file_proto_seed_proto_rawDescGZIP() []byte {
	file_proto_seed_proto_rawDescOnce.Do(func() {
		file_proto_seed_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_seed_proto_rawDescData)
	})
	return file_proto_seed_proto_rawDescData
}

var file_proto_seed_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_proto_seed_proto_goTypes = []any{
	(*SeedPacket)(nil),           // 0: colonio.seed.v1.SeedPacket
	(*AssignNodeIDRequest)(nil),  // 1: colonio.seed.v1.AssignNodeIDRequest
	(*AssignNodeIDResponse)(nil), // 2: colonio.seed.v1.AssignNodeIDResponse
	(*RelayRequest)(nil),         // 3: colonio.seed.v1.RelayRequest
	(*RelayResponse)(nil),        // 4: colonio.seed.v1.RelayResponse
	(*PollRelayingRequest)(nil),  // 5: colonio.seed.v1.PollRelayingRequest
	(*PollRelayingResponse)(nil), // 6: colonio.seed.v1.PollRelayingResponse
	(*NodeID)(nil),               // 7: colonio.api.v1.NodeID
	(*PacketContent)(nil),        // 8: colonio.api.v1.PacketContent
}
var file_proto_seed_proto_depIdxs = []int32{
	7, // 0: colonio.seed.v1.SeedPacket.dst_node_id:type_name -> colonio.api.v1.NodeID
	7, // 1: colonio.seed.v1.SeedPacket.src_node_id:type_name -> colonio.api.v1.NodeID
	8, // 2: colonio.seed.v1.SeedPacket.content:type_name -> colonio.api.v1.PacketContent
	7, // 3: colonio.seed.v1.AssignNodeIDResponse.node_id:type_name -> colonio.api.v1.NodeID
	0, // 4: colonio.seed.v1.RelayRequest.packets:type_name -> colonio.seed.v1.SeedPacket
	0, // 5: colonio.seed.v1.PollRelayingResponse.packets:type_name -> colonio.seed.v1.SeedPacket
	1, // 6: colonio.seed.v1.Seed.AssignNodeID:input_type -> colonio.seed.v1.AssignNodeIDRequest
	3, // 7: colonio.seed.v1.Seed.Relay:input_type -> colonio.seed.v1.RelayRequest
	5, // 8: colonio.seed.v1.Seed.PollRelaying:input_type -> colonio.seed.v1.PollRelayingRequest
	2, // 9: colonio.seed.v1.Seed.AssignNodeID:output_type -> colonio.seed.v1.AssignNodeIDResponse
	4, // 10: colonio.seed.v1.Seed.Relay:output_type -> colonio.seed.v1.RelayResponse
	6, // 11: colonio.seed.v1.Seed.PollRelaying:output_type -> colonio.seed.v1.PollRelayingResponse
	9, // [9:12] is the sub-list for method output_type
	6, // [6:9] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_proto_seed_proto_init() }
func file_proto_seed_proto_init() {
	if File_proto_seed_proto != nil {
		return
	}
	file_proto_colonio_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_seed_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_seed_proto_goTypes,
		DependencyIndexes: file_proto_seed_proto_depIdxs,
		MessageInfos:      file_proto_seed_proto_msgTypes,
	}.Build()
	File_proto_seed_proto = out.File
	file_proto_seed_proto_rawDesc = nil
	file_proto_seed_proto_goTypes = nil
	file_proto_seed_proto_depIdxs = nil
}
